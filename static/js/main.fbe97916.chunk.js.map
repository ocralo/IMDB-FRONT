{"version":3,"sources":["serviceWorker.js","Redux/Actions/index.js","Redux/Reducer/index.js","Components/Components/CardSerie/CardSerie.js","Requests/Requests.js","Components/Views/Home/Home.js","Components/Views/Searchs/Searchs.js","Components/Views/Series/Series.js","Components/Components/NavBar/NavBar.js","Routes.js","Redux/Store/index.js","index.js"],"names":["Boolean","window","location","hostname","match","fetchSeriesPageSuccess","series","type","fetchSeriesPageError","error","fetchSeriesSuccess","fetchSeriesError","fetchSearchSeriesPageSuccess","seriesSearch","fetchSearchSeriesPageError","fetchSearchSeriesSuccess","fetchSearchSeriesError","fetchEspecificSeriesSuccess","seriesEspecific","fetchEspecificSeriesError","fetchEspecificSeriesSeasonsSuccess","seriesEspecificSeason","fetchEspecificSeriesSeasonsError","initialState","pending","errorSeason","errorSearch","getSeries","state","getSeriesSearch","getSeriesEspecific","getSeriesEspecificSeasons","getSeriesPending","getSeriesError","getSeriesErrorSearch","getSeriesErrorSeason","CardSerie","title","imageURL","vote_average","idSerie","history","useHistory","className","onDoubleClick","push","Card","Img","variant","src","process","height","Body","Title","Text","fetchSeries","url","page","dispatch","axios","then","response","dataResult","data","results","catch","console","log","fetchSearchSeries","query","fetchEspecificSeries","id","fetchSeasonsSeries","tv_id","season_number","connect","bindActionCreators","useState","pageCount","setPageCount","useEffect","Container","Row","Col","dataLength","length","next","auxCount","hasMore","loader","map","value","xs","md","sm","lg","key","name","backdrop_path","useParams","i","width","alt","serie","serieSeason","fetchSeasons","poster_path","Nav","defaultActiveKey","onSelect","Array","isArray","seasons","season","Item","Link","eventKey","ListGroup","episodes","episode_number","NavBar","showOverlay","setShowOverlay","targetOverlay","setTargetOverlay","search","setSearch","ref","useRef","useLocation","pathname","Navbar","bg","expand","sticky","Brand","href","Toggle","aria-controls","Collapse","indexOf","onClick","goBack","Button","event","target","Overlay","show","placement","container","current","containerPadding","Popover","as","Content","Form","onSubmit","preventDefault","FormControl","placeholder","onChange","pattern","block","Routes","exact","path","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","action","actionSerie","concat","actionSerieSearch3","applyMiddleware","ReactDOM","render","Store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fbe97916.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const FETCH_SERIES_PENDING = \"FETCH_SERIES_PENDING\";\nexport const FETCH_SERIES_SUCCESS = \"FETCH_SERIES_SUCCESS\";\nexport const FETCH_SERIES_ERROR = \"FETCH_SERIES_ERROR\";\nexport const FETCH_SERIES_PAGE_PENDING = \"FETCH_SERIES_PAGE_PENDING\";\nexport const FETCH_SERIES_PAGE_SUCCESS = \"FETCH_SERIES_PAGE_SUCCESS\";\nexport const FETCH_SERIES_PAGE_ERROR = \"FETCH_SERIES_PAGE_ERROR\";\nexport const FETCH_SERIES_SEARCH_PENDING =\n\t\"FETCH_SERIES_SEARCH_PENDING\";\nexport const FETCH_SERIES_SEARCH_SUCCESS =\n\t\"FETCH_SERIES_SEARCH_SUCCESS\";\nexport const FETCH_SERIES_SEARCH_ERROR = \"FETCH_SERIES_SEARCH_ERROR\";\nexport const FETCH_SERIES_SEARCH_PAGE_PENDING =\n\t\"FETCH_SERIES_SEARCH_PAGE_PENDING\";\nexport const FETCH_SERIES_SEARCH_PAGE_SUCCESS =\n\t\"FETCH_SERIES_SEARCH_PAGE_SUCCESS\";\nexport const FETCH_SERIES_SEARCH_PAGE_ERROR =\n\t\"FETCH_SERIES_SEARCH_PAGE_ERROR\";\nexport const FETCH_SERIES_ESPECIFIC_PENDING =\n\t\"FETCH_SERIES_ESPECIFIC_PENDING\";\nexport const FETCH_SERIES_ESPECIFIC_SUCCESS =\n\t\"FETCH_SERIES_ESPECIFIC_SUCCESS\";\nexport const FETCH_SERIES_ESPECIFIC_ERROR =\n\t\"FETCH_SERIES_ESPECIFIC_ERROR\";\nexport const FETCH_SERIES_ESPECIFIC_SEASONS_PENDING =\n\t\"FETCH_SERIES_ESPECIFIC_SEASONS_PENDING\";\nexport const FETCH_SERIES_ESPECIFIC_SEASONS_SUCCESS =\n\t\"FETCH_SERIES_ESPECIFIC_SEASONS_SUCCESS\";\nexport const FETCH_SERIES_ESPECIFIC_SEASONS_ERROR =\n\t\"FETCH_SERIES_ESPECIFIC_SEASONS_ERROR\";\n\n/**\n * espera de la peticion, para traer series populares por pagina\n */\nexport function fetchSeriesPagePending() {\n\treturn {\n\t\ttype: FETCH_SERIES_PAGE_PENDING,\n\t};\n}\n/**\n * trae las series populares, si la peticion fue correcta\n * @param {Array} series\n */\nexport function fetchSeriesPageSuccess(series) {\n\treturn {\n\t\ttype: FETCH_SERIES_PAGE_SUCCESS,\n\t\tseries,\n\t};\n}\n\n/**\n * trae el error de si la peticion no se pudo realizar\n * @param {*} error\n */\nexport function fetchSeriesPageError(error) {\n\treturn {\n\t\ttype: FETCH_SERIES_PAGE_ERROR,\n\t\terror: error,\n\t};\n}\n/**\n * espera de la peticion, para traer series populares por pagina\n */\nexport function fetchSeriesPending() {\n\treturn {\n\t\ttype: FETCH_SERIES_PENDING,\n\t};\n}\n/**\n * trae las series populares, si la peticion fue correcta\n * @param {Array} series\n */\nexport function fetchSeriesSuccess(series) {\n\treturn {\n\t\ttype: FETCH_SERIES_SUCCESS,\n\t\tseries,\n\t};\n}\n\n/**\n * trae el error de si la peticion no se pudo realizar\n * @param {*} error\n */\nexport function fetchSeriesError(error) {\n\treturn {\n\t\ttype: FETCH_SERIES_ERROR,\n\t\terror: error,\n\t};\n}\n\n/**\n * espera de la peticion, para traer series buscadas\n */\nexport function fetchSearchSeriesPagePending() {\n\treturn {\n\t\ttype: FETCH_SERIES_SEARCH_PAGE_PENDING,\n\t};\n}\n/**\n * trae las series populares, si la peticion fue correcta\n * @param {Array} seriesSearch\n */\nexport function fetchSearchSeriesPageSuccess(seriesSearch) {\n\treturn {\n\t\ttype: FETCH_SERIES_SEARCH_PAGE_SUCCESS,\n\t\tseriesSearch,\n\t};\n}\n\n/**\n * trae el error de si la peticion no se pudo realizar\n * @param {*} error\n */\nexport function fetchSearchSeriesPageError(error) {\n\treturn {\n\t\ttype: FETCH_SERIES_SEARCH_PAGE_ERROR,\n\t\terror: error,\n\t};\n}\n\n/**\n * espera de la peticion, para traer series buscadas\n */\nexport function fetchSearchSeriesPending() {\n\treturn {\n\t\ttype: FETCH_SERIES_SEARCH_PENDING,\n\t};\n}\n/**\n * trae las series populares, si la peticion fue correcta\n * @param {Array} seriesSearch\n */\nexport function fetchSearchSeriesSuccess(seriesSearch) {\n\treturn {\n\t\ttype: FETCH_SERIES_SEARCH_SUCCESS,\n\t\tseriesSearch,\n\t};\n}\n\n/**\n * trae el error de si la peticion no se pudo realizar\n * @param {*} error\n */\nexport function fetchSearchSeriesError(error) {\n\treturn {\n\t\ttype: FETCH_SERIES_SEARCH_ERROR,\n\t\terror: error,\n\t};\n}\n\n/**\n * espera de la peticion, para traer series buscadas\n */\nexport function fetchEspecificSeriesPending() {\n\treturn {\n\t\ttype: FETCH_SERIES_ESPECIFIC_PENDING,\n\t};\n}\n/**\n * trae las series populares, si la peticion fue correcta\n * @param {Array} seriesSearch\n */\nexport function fetchEspecificSeriesSuccess(seriesEspecific) {\n\treturn {\n\t\ttype: FETCH_SERIES_ESPECIFIC_SUCCESS,\n\t\tseriesEspecific,\n\t};\n}\n\n/**\n * trae el error de si la peticion no se pudo realizar\n * @param {*} error\n */\nexport function fetchEspecificSeriesError(error) {\n\treturn {\n\t\ttype: FETCH_SERIES_ESPECIFIC_ERROR,\n\t\terror: error,\n\t};\n}\n\n/**\n * espera de la peticion, para traer series buscadas\n */\nexport function fetchEspecificSeriesSeasonsPending() {\n\treturn {\n\t\ttype: FETCH_SERIES_ESPECIFIC_SEASONS_PENDING,\n\t};\n}\n/**\n * trae las series populares, si la peticion fue correcta\n * @param {Array} seriesSearch\n */\nexport function fetchEspecificSeriesSeasonsSuccess(\n\tseriesEspecificSeason\n) {\n\treturn {\n\t\ttype: FETCH_SERIES_ESPECIFIC_SEASONS_SUCCESS,\n\t\tseriesEspecificSeason,\n\t};\n}\n\n/**\n * trae el error de si la peticion no se pudo realizar\n * @param {*} error\n */\nexport function fetchEspecificSeriesSeasonsError(error) {\n\treturn {\n\t\ttype: FETCH_SERIES_ESPECIFIC_SEASONS_ERROR,\n\t\terror: error,\n\t};\n}\n","import {\n\tFETCH_SERIES_PENDING,\n\tFETCH_SERIES_SUCCESS,\n\tFETCH_SERIES_ERROR,\n\tFETCH_SERIES_PAGE_PENDING,\n\tFETCH_SERIES_PAGE_SUCCESS,\n\tFETCH_SERIES_PAGE_ERROR,\n\tFETCH_SERIES_SEARCH_PENDING,\n\tFETCH_SERIES_SEARCH_SUCCESS,\n\tFETCH_SERIES_SEARCH_ERROR,\n\tFETCH_SERIES_SEARCH_PAGE_PENDING,\n\tFETCH_SERIES_SEARCH_PAGE_SUCCESS,\n\tFETCH_SERIES_SEARCH_PAGE_ERROR,\n\tFETCH_SERIES_ESPECIFIC_PENDING,\n\tFETCH_SERIES_ESPECIFIC_SUCCESS,\n\tFETCH_SERIES_ESPECIFIC_ERROR,\n\tFETCH_SERIES_ESPECIFIC_SEASONS_PENDING,\n\tFETCH_SERIES_ESPECIFIC_SEASONS_SUCCESS,\n\tFETCH_SERIES_ESPECIFIC_SEASONS_ERROR,\n} from \"../Actions/index\";\n\nconst initialState = {\n\tpending: false,\n\tseries: [],\n\tseriesSearch: [],\n\tseriesEspecific: {},\n\tseriesEspecificSeason: {},\n\terror: null,\n\terrorSeason: null,\n\terrorSearch: null,\n};\n\n/**\n * Manejador de acciones\n * @param {JSON} state\n * @param {*} action\n */\nexport default function productsReducer(\n\tstate = initialState,\n\taction\n) {\n\tswitch (action.type) {\n\t\tcase FETCH_SERIES_PENDING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpending: true,\n\t\t\t};\n\t\tcase FETCH_SERIES_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpending: false,\n\t\t\t\tseries: action.series,\n\t\t\t};\n\t\tcase FETCH_SERIES_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpending: false,\n\t\t\t\terror: action.error,\n\t\t\t};\n\t\tcase FETCH_SERIES_PAGE_PENDING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpending: true,\n\t\t\t};\n\t\tcase FETCH_SERIES_PAGE_SUCCESS:\n\t\t\tconst actionSerie = action.series;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpending: false,\n\t\t\t\tseries: state.series.concat(actionSerie),\n\t\t\t};\n\t\tcase FETCH_SERIES_PAGE_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpending: false,\n\t\t\t\terror: action.error,\n\t\t\t\tseries: state.series,\n\t\t\t};\n\t\tcase FETCH_SERIES_SEARCH_PENDING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpending: true,\n\t\t\t\tseriesSearch: state.seriesSearch,\n\t\t\t};\n\t\tcase FETCH_SERIES_SEARCH_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpending: false,\n\t\t\t\tseriesSearch: action.seriesSearch,\n\t\t\t};\n\t\tcase FETCH_SERIES_SEARCH_PAGE_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpending: false,\n\t\t\t\terrorSearch: action.error,\n\t\t\t\tseriesSearch: state.seriesSearch,\n\t\t\t};\n\t\tcase FETCH_SERIES_SEARCH_PAGE_PENDING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpending: true,\n\t\t\t\tseriesSearch: state.seriesSearch,\n\t\t\t};\n\t\tcase FETCH_SERIES_SEARCH_PAGE_SUCCESS:\n\t\t\tconst actionSerieSearch3 = action.seriesSearch;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpending: false,\n\t\t\t\tseriesSearch: state.seriesSearch.concat(\n\t\t\t\t\tactionSerieSearch3\n\t\t\t\t),\n\t\t\t};\n\t\tcase FETCH_SERIES_SEARCH_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpending: false,\n\t\t\t\terror: action.error,\n\t\t\t\tseriesSearch: state.seriesSearch,\n\t\t\t};\n\t\tcase FETCH_SERIES_ESPECIFIC_PENDING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpending: true,\n\t\t\t\tseriesEspecific: state.seriesEspecific,\n\t\t\t};\n\t\tcase FETCH_SERIES_ESPECIFIC_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpending: false,\n\t\t\t\tseriesEspecific: action.seriesEspecific,\n\t\t\t};\n\t\tcase FETCH_SERIES_ESPECIFIC_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpending: false,\n\t\t\t\terror: action.error,\n\t\t\t\tseriesEspecific: state.seriesEspecific,\n\t\t\t};\n\t\tcase FETCH_SERIES_ESPECIFIC_SEASONS_PENDING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpending: true,\n\t\t\t\tseriesEspecificSeason: state.seriesEspecificSeason,\n\t\t\t};\n\t\tcase FETCH_SERIES_ESPECIFIC_SEASONS_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpending: false,\n\t\t\t\tseriesEspecificSeason: action.seriesEspecificSeason,\n\t\t\t};\n\t\tcase FETCH_SERIES_ESPECIFIC_SEASONS_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpending: false,\n\t\t\t\terrorSeason: action.error,\n\t\t\t\tseriesEspecificSeason: state.seriesEspecificSeason,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const getSeries = (state) => state.series;\nexport const getSeriesSearch = (state) => state.seriesSearch;\nexport const getSeriesEspecific = (state) => state.seriesEspecific;\nexport const getSeriesEspecificSeasons = (state) =>\n\tstate.seriesEspecificSeason;\nexport const getSeriesPending = (state) => state.pending;\nexport const getSeriesError = (state) => state.error;\nexport const getSeriesErrorSearch = (state) => state.errorSearch;\nexport const getSeriesErrorSeason = (state) => state.errorSeason;\n","import React from \"react\";\n\n//importacion de librerias externas\nimport { Card } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\n/**\n *\n * @param {*} param0\n */\nexport default function CardSerie({\n\ttitle = \"titulo\",\n\timageURL,\n\tvote_average,\n\tidSerie,\n}) {\n\tlet history = useHistory();\n\n\tfunction handleDoubleClick() {\n\t\thistory.push(`/Series/${idSerie}`);\n\t}\n\treturn (\n\t\t<div\n\t\t\tclassName=\"flip-card mt-4\"\n\t\t\tonDoubleClick={handleDoubleClick}>\n\t\t\t<div className=\"flip-card-inner\">\n\t\t\t\t<Card className=\"shadow flip-card-front\">\n\t\t\t\t\t<Card.Img\n\t\t\t\t\t\tvariant=\"top\"\n\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\timageURL\n\t\t\t\t\t\t\t\t? `https://image.tmdb.org/t/p/w500${imageURL}`\n\t\t\t\t\t\t\t\t: `${process.env.PUBLIC_URL}/img/error.svg`\n\t\t\t\t\t\t}\n\t\t\t\t\t\theight=\"167.453\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Card.Body className=\"p-2\">\n\t\t\t\t\t\t<Card.Title className=\"m-0\">\n\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</Card>\n\t\t\t\t<Card className=\"shadow flip-card-back\">\n\t\t\t\t\t<Card.Body className=\"p-2\">\n\t\t\t\t\t\t<Card.Title className=\"m-0\">\n\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t\t<Card.Text className=\"mt-2\">\n\t\t\t\t\t\t\tRating : {vote_average}\n\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","//importacion de librerias externas\nimport * as axios from \"axios\";\n\n//importacion de acciones de redux\nimport {\n\tfetchSeriesPending,\n\tfetchSeriesSuccess,\n\tfetchSeriesError,\n\tfetchSeriesPagePending,\n\tfetchSeriesPageSuccess,\n\tfetchSeriesPageError,\n\tfetchSearchSeriesPending,\n\tfetchSearchSeriesSuccess,\n\tfetchSearchSeriesError,\n\tfetchSearchSeriesPagePending,\n\tfetchSearchSeriesPageSuccess,\n\tfetchSearchSeriesPageError,\n\tfetchEspecificSeriesPending,\n\tfetchEspecificSeriesSuccess,\n\tfetchEspecificSeriesError,\n\tfetchEspecificSeriesSeasonsPending,\n\tfetchEspecificSeriesSeasonsSuccess,\n\tfetchEspecificSeriesSeasonsError,\n} from \"../Redux/Actions/index\";\n\n/**\n * Funcion que realiza peticion get a la api de TMDB con la key generada\n * que retorna las series mas populares\n * @param {string} url\n * @param {int} page\n */\nexport const fetchSeries = (url, page = 1) => {\n\treturn (dispatch) => {\n\t\tif (page !== 1) {\n\t\t\tdispatch(fetchSeriesPagePending());\n\t\t\taxios\n\t\t\t\t.get(\n\t\t\t\t\t`${url}?api_key=b2907782d07859a652052d3bae537475&page=${page}`\n\t\t\t\t)\n\t\t\t\t.then((response) => {\n\t\t\t\t\t// handle success\n\t\t\t\t\tconst dataResult = response.data.results;\n\t\t\t\t\tdispatch(fetchSeriesPageSuccess(dataResult));\n\t\t\t\t\treturn dataResult;\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\t// handle error\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\tdispatch(fetchSeriesPageError(error));\n\t\t\t\t});\n\t\t} else {\n\t\t\tdispatch(fetchSeriesPending());\n\t\t\taxios\n\t\t\t\t.get(\n\t\t\t\t\t`${url}?api_key=b2907782d07859a652052d3bae537475&page=${page}`\n\t\t\t\t)\n\t\t\t\t.then((response) => {\n\t\t\t\t\t// handle success\n\t\t\t\t\tconst dataResult = response.data.results;\n\t\t\t\t\tdispatch(fetchSeriesSuccess(dataResult));\n\t\t\t\t\treturn dataResult;\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\t// handle error\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\tdispatch(fetchSeriesError(error));\n\t\t\t\t});\n\t\t}\n\t};\n};\n\n/**\n * Funcion que realiza peticion get a la api de TMDB con la key generada\n * que retorna la busqueda de una palabra, con relacion a\n * un nombre de serie\n * @param {string} url\n * @param {int} page\n * @param {string} query\n */\nexport const fetchSearchSeries = (url, page = 1, query = \"a\") => {\n\treturn (dispatch) => {\n\t\tif (page !== 1) {\n\t\t\tdispatch(fetchSearchSeriesPagePending());\n\t\t\taxios\n\t\t\t\t.get(\n\t\t\t\t\t`${url}?api_key=b2907782d07859a652052d3bae537475&page=${page}&query=${query}`\n\t\t\t\t)\n\t\t\t\t.then((response) => {\n\t\t\t\t\t// handle success\n\t\t\t\t\tconst dataResult = response.data.results;\n\t\t\t\t\tdispatch(\n\t\t\t\t\t\tfetchSearchSeriesPageSuccess(dataResult)\n\t\t\t\t\t);\n\t\t\t\t\treturn dataResult;\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\t// handle error\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\tdispatch(fetchSearchSeriesPageError(error));\n\t\t\t\t});\n\t\t} else {\n\t\t\tdispatch(fetchSearchSeriesPending());\n\t\t\taxios\n\t\t\t\t.get(\n\t\t\t\t\t`${url}?api_key=b2907782d07859a652052d3bae537475&page=${page}&query=${query}`\n\t\t\t\t)\n\t\t\t\t.then((response) => {\n\t\t\t\t\t// handle success\n\t\t\t\t\tconst dataResult = response.data.results;\n\t\t\t\t\tdispatch(fetchSearchSeriesSuccess(dataResult));\n\t\t\t\t\treturn dataResult;\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\t// handle error\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\tdispatch(fetchSearchSeriesError(error));\n\t\t\t\t});\n\t\t}\n\t};\n};\n\n/**\n * Funcion que realiza peticion get a la api de TMDB con la key generada\n * que retorna la busqueda de una palabra, con relacion a\n * un nombre de serie\n * @param {string} url\n * @param {int} id\n */\nexport const fetchEspecificSeries = (url, id = 63174) => {\n\treturn (dispatch) => {\n\t\tdispatch(fetchEspecificSeriesPending());\n\t\taxios\n\t\t\t.get(\n\t\t\t\t`${url}${id}?api_key=b2907782d07859a652052d3bae537475`\n\t\t\t)\n\t\t\t.then((response) => {\n\t\t\t\t// handle success\n\t\t\t\tconst dataResult = response.data;\n\t\t\t\tdispatch(fetchEspecificSeriesSuccess(dataResult));\n\t\t\t\treturn dataResult;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t// handle error\n\t\t\t\tconsole.log(error);\n\t\t\t\tdispatch(fetchEspecificSeriesError(error));\n\t\t\t});\n\t};\n};\n\n/**\n * Funcion que realiza peticion get a la api de TMDB con la key generada\n * que retorna la busqueda de las emporadas y el rating\n * @param {string} url\n * @param {int} episode_number\n * @param {int} tv_id\n */\nexport const fetchSeasonsSeries = (\n\turl,\n\ttv_id = 1,\n\tseason_number = 1\n) => {\n\treturn (dispatch) => {\n\t\tdispatch(fetchEspecificSeriesSeasonsPending());\n\t\taxios\n\t\t\t.get(\n\t\t\t\t`${url}${tv_id}/season/${season_number}?api_key=b2907782d07859a652052d3bae537475`\n\t\t\t)\n\t\t\t.then((response) => {\n\t\t\t\t// handle success\n\t\t\t\tconst dataResult = response.data;\n\t\t\t\tdispatch(\n\t\t\t\t\tfetchEspecificSeriesSeasonsSuccess(dataResult)\n\t\t\t\t);\n\t\t\t\treturn dataResult;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t// handle error\n\t\t\t\tconsole.log(error);\n\t\t\t\tdispatch(fetchEspecificSeriesSeasonsError(error));\n\t\t\t});\n\t};\n};\n","import React, { useEffect, useState } from \"react\";\n\n//importacion de librerias externas\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\n//importacion de actions de redux\n\n//importacion de state de redux\n\n//importacion de reducer de redux\nimport {\n\tgetSeriesError,\n\tgetSeriesPending,\n\tgetSeries,\n} from \"../../../Redux/Reducer/index\";\n\n//importacion de componentes\nimport CardSerie from \"../../Components/CardSerie/CardSerie\";\nimport { fetchSeries } from \"../../../Requests/Requests\";\n\n/**\n * Vista principal de la aplicacion\n */\nconst Home = ({ fetchSeries, series }) => {\n\tconst [pageCount, setPageCount] = useState(2);\n\tuseEffect(() => {\n\t\tfetchSeries(\"https://api.themoviedb.org/3/discover/tv\");\n\t}, [fetchSeries]);\n\n\t/**\n\t * Funcion que se encarga de de hacer la peticion,\n\t * para traer los nuevos datos de la pagincion,\n\t * ademas de sumar al contador pageCount\n\t */\n\tconst getSerieFromPage = () => {\n\t\tlet auxCount = pageCount;\n\t\tfetchSeries(\n\t\t\t\"https://api.themoviedb.org/3/discover/tv\",\n\t\t\tpageCount\n\t\t);\n\t\tauxCount++;\n\t\tsetPageCount(auxCount);\n\t};\n\treturn (\n\t\t<Container className=\"mt-4\">\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<h1>Series Populares</h1>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<InfiniteScroll\n\t\t\t\t\tdataLength={series.length} //tamaño del arreglo a utilizar\n\t\t\t\t\tnext={getSerieFromPage}\n\t\t\t\t\thasMore={true}\n\t\t\t\t\tloader={<h4>Loading...</h4>}\n\t\t\t\t\tclassName=\"row\">\n\t\t\t\t\t{series.map((value) => (\n\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\txs={12}\n\t\t\t\t\t\t\tmd={6}\n\t\t\t\t\t\t\tsm={6}\n\t\t\t\t\t\t\tlg={4}\n\t\t\t\t\t\t\tkey={value.id}>\n\t\t\t\t\t\t\t<CardSerie\n\t\t\t\t\t\t\t\ttitle={value.name}\n\t\t\t\t\t\t\t\timageURL={value.backdrop_path}\n\t\t\t\t\t\t\t\tvote_average={value.vote_average}\n\t\t\t\t\t\t\t\tidSerie={value.id}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t))}\n\t\t\t\t</InfiniteScroll>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\n/**\n * trae los estados de la storage\n * @param {*} state\n */\nconst mapStateToProps = (state) => ({\n\terror: getSeriesError(state),\n\tseries: getSeries(state),\n\tpending: getSeriesPending(state),\n});\n\n/**\n * metodo para emitir acciones, para modificar el estado\n * de la storage\n * @param {*} dispatch\n */\nconst mapDispatchToProps = (dispatch) =>\n\tbindActionCreators(\n\t\t{\n\t\t\tfetchSeries: fetchSeries,\n\t\t},\n\t\tdispatch\n\t);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React, { useEffect, useState } from \"react\";\n\n//importacion de librerias externas\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { useParams } from \"react-router-dom\";\n\n//importacion de actions de redux\n\n//importacion de state de redux\n\n//importacion de reducer de redux\nimport {\n\tgetSeriesPending,\n\tgetSeriesSearch,\n\tgetSeriesErrorSearch,\n} from \"../../../Redux/Reducer/index\";\n\n//importacion de componentes\nimport CardSerie from \"../../Components/CardSerie/CardSerie\";\nimport { fetchSearchSeries } from \"../../../Requests/Requests\";\n\n/**\n * Vista de una busqueda de serie en la aplicacion\n */\nconst Searchs = ({ fetchSeries, series, error }) => {\n\tlet { query } = useParams();\n\tconst [pageCount, setPageCount] = useState(1);\n\n\tuseEffect(() => {\n\t\tlet auxCount = 1;\n\n\t\tfetchSeries(\n\t\t\t\"https://api.themoviedb.org/3/search/tv\",\n\t\t\tauxCount,\n\t\t\tquery\n\t\t);\n\t\tauxCount++;\n\t\tsetPageCount(auxCount);\n\t}, [query]);\n\n\t/**\n\t * Funcion que se encarga de de hacer la peticion,\n\t * para traer los nuevos datos de la paginacion,\n\t * ademas de sumar al contador pageCount\n\t */\n\tconst getSerieFromPage = () => {\n\t\tlet auxCount = pageCount;\n\t\tfetchSeries(\n\t\t\t\"https://api.themoviedb.org/3/search/tv\",\n\t\t\tpageCount,\n\t\t\tquery\n\t\t);\n\t\tauxCount++;\n\t\tsetPageCount(auxCount);\n\t};\n\tconsole.log(series);\n\treturn !error && series.length > 0 ? (\n\t\t<Container className=\"mt-4\">\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<h1>Series relacionadas a: \"{query}\"</h1>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<InfiniteScroll\n\t\t\t\t\tdataLength={series.length} //tamaño del arreglo a utilizar\n\t\t\t\t\tnext={getSerieFromPage}\n\t\t\t\t\thasMore={true}\n\t\t\t\t\tloader={<h4>Loading...</h4>}\n\t\t\t\t\tclassName=\"row\">\n\t\t\t\t\t{series.map((value, i) => {\n\t\t\t\t\t\t//console.log(\"\", value);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\t\txs={12}\n\t\t\t\t\t\t\t\tmd={6}\n\t\t\t\t\t\t\t\tsm={6}\n\t\t\t\t\t\t\t\tlg={4}\n\t\t\t\t\t\t\t\tkey={i + \"-\" + value.id}>\n\t\t\t\t\t\t\t\t<CardSerie\n\t\t\t\t\t\t\t\t\ttitle={value.name}\n\t\t\t\t\t\t\t\t\timageURL={value.backdrop_path}\n\t\t\t\t\t\t\t\t\tvote_average={value.vote_average}\n\t\t\t\t\t\t\t\t\tidSerie={value.id}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</InfiniteScroll>\n\t\t\t</Row>\n\t\t</Container>\n\t) : (\n\t\t<Container className=\"mt-4\">\n\t\t\t<Row>\n\t\t\t\t<Col className=\"text-center\">\n\t\t\t\t\t<h1>\n\t\t\t\t\t\tNo se encontro coincidencia en la busqueda\n\t\t\t\t\t</h1>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={`${process.env.PUBLIC_URL}/img/question.svg`}\n\t\t\t\t\t\twidth=\"300\"\n\t\t\t\t\t\talt=\"not found\"\n\t\t\t\t\t\tclassName=\"mt-4\"\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\n/**\n * trae los estados de la storage\n * @param {*} state\n */\nconst mapStateToProps = (state) => ({\n\terror: getSeriesErrorSearch(state),\n\tseries: getSeriesSearch(state),\n\tpending: getSeriesPending(state),\n});\n\n/**\n * metodo para emitir acciones, para modificar el estado\n * de la storage\n * @param {*} dispatch\n */\nconst mapDispatchToProps = (dispatch) =>\n\tbindActionCreators(\n\t\t{\n\t\t\tfetchSeries: fetchSearchSeries,\n\t\t},\n\t\tdispatch\n\t);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Searchs);\n","import React, { useEffect } from \"react\";\n\n//importacion de librerias externas\nimport {\n\tContainer,\n\tRow,\n\tCol,\n\tCard,\n\tNav,\n\tListGroup,\n} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { useParams } from \"react-router-dom\";\n\n//importacion de reducer de redux\nimport {\n\tgetSeriesError,\n\tgetSeriesPending,\n\tgetSeriesEspecific,\n\tgetSeriesEspecificSeasons,\n\tgetSeriesErrorSeason,\n} from \"../../../Redux/Reducer/index\";\n\n//importacion de componentes\nimport {\n\tfetchEspecificSeries,\n\tfetchSeasonsSeries,\n} from \"../../../Requests/Requests\";\n\nconst Series = ({\n\tfetchSeries,\n\tfetchSeasons,\n\tserie,\n\tserieSeason,\n\terrorSeason,\n}) => {\n\tlet { id } = useParams();\n\n\tuseEffect(() => {\n\t\tfetchSeries(\"https://api.themoviedb.org/3/tv/\", id);\n\t\tfetchSeasons(\"https://api.themoviedb.org/3/tv/\", id, 0);\n\t}, [fetchSeasons, fetchSeries, id]);\n\n\tuseEffect(() => {\n\t\tfetchSeasons(\"https://api.themoviedb.org/3/tv/\", id, 1);\n\t}, [errorSeason, fetchSeasons, id]);\n\n\tconst handleClickSeason = (tv_id, season_number) => {\n\t\tfetchSeasons(\n\t\t\t\"https://api.themoviedb.org/3/tv/\",\n\t\t\ttv_id,\n\t\t\tseason_number\n\t\t);\n\t};\n\n\treturn (\n\t\t<Container className=\"mt-5 mb-5\">\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<Card className=\"shadow\">\n\t\t\t\t\t\t<Card.Img\n\t\t\t\t\t\t\tvariant=\"top\"\n\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\tserie?.poster_path\n\t\t\t\t\t\t\t\t\t? `https://image.tmdb.org/t/p/w500${serie.poster_path}`\n\t\t\t\t\t\t\t\t\t: \"https://image.tmdb.org/t/p/w500/k1lICEYRpJeFRIRfjxYwmpO9LTu.jpg\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tclassName=\"poster-img\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<Card.Title className=\"mb-0\">\n\t\t\t\t\t\t\t\t{serie?.name}\n\t\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<h3>Temporadas</h3>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Nav\n\t\t\t\t\t\t\t\tvariant=\"tabs\"\n\t\t\t\t\t\t\t\tdefaultActiveKey=\"1\"\n\t\t\t\t\t\t\t\tonSelect={(i) => {\n\t\t\t\t\t\t\t\t\thandleClickSeason(\n\t\t\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t\t\t\ti\n\t\t\t\t\t\t\t\t\t\t//season?.season_number\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t{Array.isArray(serie?.seasons)\n\t\t\t\t\t\t\t\t\t? serie?.seasons.map((season) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<Nav.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={season?.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Nav.Link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\teventKey={`${season?.season_number}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tseason?.season_number\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<ListGroup>\n\t\t\t\t\t\t\t\t{Array.isArray(\n\t\t\t\t\t\t\t\t\tserieSeason.episodes\n\t\t\t\t\t\t\t\t) ? (\n\t\t\t\t\t\t\t\t\tserieSeason.episodes.map(\n\t\t\t\t\t\t\t\t\t\t(value) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={value.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"border-top-0 rounded-0 rounded-bottom d-flex justify-content-between\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{value.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEpisodio{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue.episode_number\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<ListGroup.Item className=\"border-top-0 rounded-0 rounded-bottom\">\n\t\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\n/**\n * trae los estados de la storage\n * @param {*} state\n */\nconst mapStateToProps = (state) => ({\n\terror: getSeriesError(state),\n\tserie: getSeriesEspecific(state),\n\tserieSeason: getSeriesEspecificSeasons(state),\n\tpending: getSeriesPending(state),\n\terrorSeason: getSeriesErrorSeason(state),\n});\n\n/**\n * metodo para emitir acciones, para modificar el estado\n * de la storage\n * @param {*} dispatch\n */\nconst mapDispatchToProps = (dispatch) =>\n\tbindActionCreators(\n\t\t{\n\t\t\tfetchSeries: fetchEspecificSeries,\n\t\t\tfetchSeasons: fetchSeasonsSeries,\n\t\t},\n\t\tdispatch\n\t);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Series);\n","import React, { useState, useRef } from \"react\";\n\n//importacion de librerias externas\nimport {\n\tNavbar,\n\tNav,\n\tForm,\n\tFormControl,\n\tButton,\n\tPopover,\n\tOverlay,\n} from \"react-bootstrap\";\nimport { useLocation, useHistory } from \"react-router-dom\";\n\n//importacion de componenetes\n\n/**\n * componente Navbar, el cual sera el menu superior de la aplicacion\n */\nexport default function NavBar() {\n\tconst [showOverlay, setShowOverlay] = useState(false);\n\tconst [targetOverlay, setTargetOverlay] = useState(null);\n\tconst [search, setSearch] = useState(\"\");\n\n\tconst ref = useRef(null);\n\n\tlet location = useLocation();\n\tlet history = useHistory();\n\n\tconsole.log(location.pathname);\n\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\thistory.push(`/search/${search}`);\n\t};\n\tconst handleChange = (event) => {\n\t\tconst target = event.target;\n\t\tconst value = target.value;\n\t\tsetSearch(value);\n\t};\n\n\t/**\n\t * funcion que activa o desactiva el overlay del buscador\n\t * @param {*} event\n\t */\n\tconst handleClick = (event) => {\n\t\tsetShowOverlay(!showOverlay);\n\t\tsetTargetOverlay(event.target);\n\t};\n\treturn (\n\t\t<Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" sticky={\"top\"}>\n\t\t\t<div className=\"container\">\n\t\t\t\t<Navbar.Brand href=\"/\">NVC Movie</Navbar.Brand>\n\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t{location.pathname.indexOf(\"Series\") >= 0 ? (\n\t\t\t\t\t\t\t<Nav.Link\n\t\t\t\t\t\t\t\tonClick={() => history.goBack()}>\n\t\t\t\t\t\t\t\tRegresar\n\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{/* <Nav.Link href=\"#home\">Inicio</Nav.Link>\n\t\t\t\t\t<Nav.Link href=\"#link\">Link</Nav.Link> */}\n\t\t\t\t\t</Nav>\n\t\t\t\t\t<div ref={ref}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"outline-success\"\n\t\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\t\tclassName=\"btn-search\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={`${process.env.PUBLIC_URL}/img/search.svg`}\n\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\twidth=\"25\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t<Overlay\n\t\t\t\t\t\t\tshow={showOverlay}\n\t\t\t\t\t\t\ttarget={targetOverlay}\n\t\t\t\t\t\t\tplacement=\"bottom\"\n\t\t\t\t\t\t\tcontainer={ref.current}\n\t\t\t\t\t\t\tcontainerPadding={20}>\n\t\t\t\t\t\t\t<Popover id=\"popover-contained\">\n\t\t\t\t\t\t\t\t<Popover.Title as=\"h3\">\n\t\t\t\t\t\t\t\t\t¿Que serie Buscas?\n\t\t\t\t\t\t\t\t</Popover.Title>\n\t\t\t\t\t\t\t\t<Popover.Content>\n\t\t\t\t\t\t\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Buscar...\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"mr-sm-2 mb-2\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\t\t\t\t\t\tpattern=\"'/[^\\w\\s+$]/u'\"\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"No se aceptan caracteres especiales en la busqueda\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"success\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\tblock>\n\t\t\t\t\t\t\t\t\t\t\tBuscar\n\t\t\t\t\t\t\t\t\t\t</Button>{\" \"}\n\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t</Popover.Content>\n\t\t\t\t\t\t\t</Popover>\n\t\t\t\t\t\t</Overlay>\n\t\t\t\t\t</div>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</div>\n\t\t</Navbar>\n\t);\n}\n","import React from \"react\";\n\n//importacion de librerias externas\nimport {\n\tHashRouter as Router,\n\tSwitch,\n\tRoute,\n} from \"react-router-dom\";\n\n//importacion de componenetes\nimport Home from \"./Components/Views/Home/Home\";\nimport Search from \"./Components/Views/Searchs/Searchs\";\nimport Series from \"./Components/Views/Series/Series\";\nimport NavBar from \"./Components/Components/NavBar/NavBar\";\n\n/**\n * Componenete que maneja las rutas de la aplicacion\n */\nexport default function Routes() {\n\treturn (\n\t\t<Router>\n\t\t\t<NavBar />\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t<Home />\n\t\t\t\t</Route>\n\t\t\t\t<Route exact path=\"/Series/:id\">\n\t\t\t\t\t<Series />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/search/:query\">\n\t\t\t\t\t<Search />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport Reducer from \"../Reducer/index\";\nimport thunk from \"redux-thunk\";\n\nconst middleware = thunk;\n\nconst composeEnhancers =\n\t(typeof window !== \"undefined\" &&\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n\tcompose;\n\nconst store = createStore(\n\tReducer,\n\tcomposeEnhancers(applyMiddleware(middleware))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Routes from \"./Routes\";\nimport \"./Sass/index.scss\";\n\n//importacion de librerias externas\nimport { Provider } from \"react-redux\";\n\n//se importa la store de redux, que se utilizara\nimport Store from \"./Redux/Store/index\";\n\nReactDOM.render(\n\t<Provider store={Store}>\n\t\t<Routes />\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}